<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">


	<select id="login" resultType="String">
		SELECT id FROM members WHERE id=#{id} AND pw=#{pw}
	</select>

	<select id="mydata" resultType="com.nbti.dto.MembersDTO">
		select * from members where id = #{id}
	</select>

	<update id="updateUser">
		UPDATE members
		SET address = #{address},
		member_call = #{member_call},
		email = #{email},
		team_code = #{team_code},
		job_code = #{job_code},
		member_level = #{member_level}
		WHERE id = #{id}
	</update>

	<update id="updateMyData">
		update members set email=#{email},member_call=#{member_call},
		address=#{address} , member_img = #{member_img, jdbcType=VARCHAR}
		where id =#{id}
	</update>

	<update id="updateMyDataNoImg">
		update members set email=#{email},member_call=#{member_call},
		address=#{address} where id =#{id}
	</update>

	<select id="selectAll" resultType="com.nbti.dto.MembersDTO">
		select m.id,m.name,m.gender,m.birth,t.team_name as team_code,m.member_img,
		j.job_name as job_code
		from members m
		LEFT JOIN job j ON m.job_code = j.job_code
		LEFT JOIN teams t ON m.team_code = t.team_code
	</select>
	<update id="updateMember">
		update members set email=#{email},
		team_code=#{team_code}, job_code=#{job_code},
		member_call=#{member_call}, ent_yn=#{ent_yn},end_date=#{end_date}
		where id=#{id}
	</update>


	<insert id="insert" parameterType="com.nbti.dto.MembersDTO">
		INSERT INTO members (
		id, pw, name, email, team_code, job_code, member_level, member_call,
		address, birth, gender, ent_yn, vacation_period, enter_date
		) VALUES (
		#{id}, #{pw}, #{name}, #{email}, #{team_code}, #{job_code}, #{member_level},
		#{member_call}, #{address}, #{birth}, #{gender}, #{ent_yn},
		#{vacation_period}, SYSDATE
		)
	</insert>
	<delete id="deleteUser">
		delete from members where id = #{id}
	</delete>

	<select id="selectMembers" resultType="map">
		SELECT
		m.id,
		m.pw,
		m.name,
		m.email,
		t.team_name,
		j.job_name,
		m.member_level,
		m.member_call,
		m.gender,
		m.ent_yn,
		m.vacation_period
		FROM members m
		LEFT JOIN teams t ON m.team_code = t.team_code
		LEFT JOIN job j ON m.job_code = j.job_code
	</select>
	<select id="selectByTeam" resultType="map">
		SELECT
		m.id,
		m.pw,
		m.name,
		m.email,
		t.team_name,
		j.job_name,
		m.member_level,
		m.member_call,
		m.gender,
		m.ent_yn,
		m.vacation_period
		FROM members m
		LEFT JOIN teams t ON m.team_code = t.team_code
		LEFT JOIN job j ON m.job_code = j.job_code
		WHERE m.team_code = #{team_code}

	</select>
	<select id="checkPw" resultType="boolean">
		select count(*) from members
		where id = #{id} and pw = #{pw}
	</select>

	<update id="changePw">
		update members set pw = #{pw}, pw_change_date = sysdate where id = #{id}
	</update>
	
	<select id="selectChangeDate" resultType="java.sql.Timestamp">
		select pw_change_date from members where id = #{id}
	</select>

	<select id="searchMembers" resultType="map">
		select
		m.id, m.name,
		m.team_code, t.team_name,
		m.job_code, j.job_name,
		t.dept_code, d.dept_name
		from teams t
		left outer join members m on t.team_code = m.team_code
		left outer join job j on m.job_code = j.job_code
		left outer join department d on t.dept_code = d.dept_code
		where t.team_code = #{team}
		order by j.job_code asc
	</select>
	
	<select id="searchUser" resultType="map">
		SELECT
		m.id,
		m.pw,
		m.name,
		m.email,
		t.team_name,
		j.job_name,
		m.member_level,
		m.member_call,
		m.gender,
		m.ent_yn,
		m.vacation_period
		FROM members m
		LEFT JOIN teams t ON m.team_code = t.team_code
		LEFT JOIN job j ON m.job_code = j.job_code
		WHERE m.name LIKE '%' || #{name} || '%'
		ORDER BY m.name
	</select>

	<select id="memberData" resultType="map">
		select
		m.id, m.name,
		m.team_code, t.team_name,
		m.job_code, j.job_name,
		t.dept_code, d.dept_name
		from members m
		left outer join teams t on m.team_code = t.team_code
		left outer join job j on m.job_code = j.job_code
		left outer join department d on t.dept_code = d.dept_code
		where id = #{id}
	</select>

	<select id="selectPeriod" resultType="int">
		select vacation_period from
		members where id = #{id}
	</select>

	<!-- 여기부터 채팅관련 멤버 이름 리스트 -->
	<select id="chatMembersName" parameterType="java.util.List" resultType="java.lang.String">
		select name from members where id in
		<foreach item="item" index="index" collection="list" open="("
			close=")" separator=",">
			#{item}
		</foreach>
	</select>
	
	<select id="getMemberName" resultType="String">
		select name from members where id= #{id}
	</select>

    <update id="updateVacationPeriod" parameterType="map">
    UPDATE members 
    SET vacation_period = vacation_period - #{days, jdbcType=INTEGER}
    WHERE id = #{id, jdbcType=VARCHAR}
    </update>
    <select id="findIdByEmailAndName" resultType="String">
        SELECT id FROM members WHERE email = #{email} AND name = #{name}
    </select>

    <select id="findPwByIdNameAndBirth" resultType="String">
        SELECT pw FROM members WHERE id = #{id} AND name = #{name} AND birth = #{birth}
    </select>
        <select id="verifyUser" resultType="int">
        SELECT COUNT(*)
        FROM members
        WHERE id = #{id}
          AND name = #{name}
          AND birth = #{birth}
    </select>
</mapper>


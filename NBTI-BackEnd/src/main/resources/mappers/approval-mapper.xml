<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="Approval">
 
 	<insert id="insert">
 		insert into approval values(temp_seq.nextval, #{member_id}, sysdate, #{doc_sub_seq}, #{emergency}, 'n', '', #{doc_state_code})
 		<selectKey resultType="int" order="AFTER" keyProperty="temp_seq">
 			select temp_seq.currval from dual
 		</selectKey>
 	</insert>
 	
 	<select id="selectWriterIsMe" resultType="com.nbti.dto.ListDocDTO">
 		select * from(
			select 
			    a.temp_seq, 
			    a.member_id, 
			    a.approval_date, 
			    a.EMERGENCY, 
			    ds.DOC_SUB_NAME, 
			    a.APPROVAL_SEQ ,
			    a.DOC_STATE,
			    dd.TITLE,
			    m.name ,
			    ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown
			from approval a 
			    left outer join members m on a.member_id = m.id
			    left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
			    left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
			    left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
			    left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
			where member_id = #{id} and a.doc_state not in 't'
			<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectReferIsMe" resultType="com.nbti.dto.ListDocDTO">
 		select * from(
 		select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown 
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join REFER_LINE rl on a.temp_seq = rl.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
 		where referer = #{id} and read='Y' and a.doc_state not in ('c','r')
 			<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectReferIsMeWait" resultType="com.nbti.dto.ListDocDTO">
 		select * from(
 		select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown   
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join REFER_LINE rl on a.temp_seq = rl.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
 		where referer = #{id} and read = 'N' and a.doc_state not in ('c','r')
 		<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectApprovalIsMe" resultType="com.nbti.dto.ListDocDTO">
	 	select * from(
	 	select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown  
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
	 	where approval_id = #{id} and a.doc_state not in ('c','t')
	 	<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectApprovalWait" resultType="com.nbti.dto.ListDocDTO">
	 	select * from(
	 	select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name,
	 		ROW_NUMBER() OVER (
	 		order by 
	 		case when a.emergency = 'Y' then 0 else 1 end asc,
	 		case when a.emergency = 'Y' then a.approval_date else null end asc,
	 		case when a.emergency = 'N' then a.approval_date else null end desc) as rown   
 		from approval a 
 			left outer join members m on a.member_id = m.id
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
	 	where al.approval_id = #{id} and al.member_state_code='w' and a.doc_state ='i'
			<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectApprovalBook" resultType="com.nbti.dto.ListDocDTO">
	 	select * from(
	 	select 
	        a.temp_seq, 
	 		a.member_id, 
	 		a.approval_date, 
	 		a.EMERGENCY, 
	 		ds.DOC_SUB_NAME, 
	 		a.APPROVAL_SEQ ,
	 		a.DOC_STATE,
	        dd.TITLE,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown   
 		from approval a 
 			left outer join members m on a.member_id = m.id 
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	        left outer join doc_sub ds on a.DOC_SUB_SEQ = ds.DOC_FORM_SEQ
	        left outer join doc_draft dd on a.TEMP_SEQ = dd.DRAFT_SEQ
	        left outer join DOC_LEAVE dl on a.temp_seq = dl.LEAVE_SEQ
	        left outer join DOC_VACATION dv on a.temp_seq = dv.vacation_seq
	 		where al.approval_id = #{id} and al.member_state_code='b' and a.doc_state ='i'
	 		<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectReturn" resultType="com.nbti.dto.ListDocDTO">
	 	select * from(
	 	select 
		    a.temp_seq, 
		    a.member_id, 
		    a.approval_date, 
		    a.emergency, 
		    ds.doc_sub_name, 
		    a.approval_seq,
		    a.doc_state,
		    dd.title,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown  
 		from approval a 
 			left outer join members m on a.member_id = m.id
			left outer join doc_sub ds on a.doc_sub_seq = ds.doc_form_seq
			left outer join doc_draft dd on a.temp_seq = dd.draft_seq
			left outer join doc_leave dl on a.temp_seq = dl.leave_seq
			left outer join doc_vacation dv on a.temp_seq = dv.vacation_seq
			where a.member_id = #{id} and a.doc_state = 'r'
			<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectCancle" resultType="com.nbti.dto.ListDocDTO">
 		select * from(
 		select 
		    a.temp_seq, 
		    a.member_id, 
		    a.approval_date, 
		    a.emergency, 
		    ds.doc_sub_name, 
		    a.approval_seq,
		    a.doc_state,
		    dd.title,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown  
 		from approval a 
 			left outer join members m on a.member_id = m.id
			left outer join doc_sub ds on a.doc_sub_seq = ds.doc_form_seq
			left outer join doc_draft dd on a.temp_seq = dd.draft_seq
			left outer join doc_leave dl on a.temp_seq = dl.leave_seq
			left outer join doc_vacation dv on a.temp_seq = dv.vacation_seq
			where a.member_id = #{id} and a.doc_state = 'c'
		<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectTemp" resultType="com.nbti.dto.ListDocDTO">
 		select * from(
 		select 
		    a.temp_seq, 
		    a.member_id, 
		    a.approval_date, 
		    a.emergency, 
		    ds.doc_sub_name, 
		    a.approval_seq,
		    a.doc_state,
		    dd.title,
	 		m.name,
	 		ROW_NUMBER() OVER (ORDER BY a.temp_seq DESC) as rown  
 		from approval a 
 			left outer join members m on a.member_id = m.id
			left outer join doc_sub ds on a.doc_sub_seq = ds.doc_form_seq
			left outer join doc_draft dd on a.temp_seq = dd.draft_seq
			left outer join doc_leave dl on a.temp_seq = dl.leave_seq
			left outer join doc_vacation dv on a.temp_seq = dv.vacation_seq
			where a.member_id = #{id} and a.doc_state = 't'
		<if test="target =='writer'">
				and m.name like '%'||#{keyword}||'%'
			</if>
			<if test="target =='doc_seq'">
				and a.APPROVAL_SEQ like '%'||#{keyword}||'%'
			</if>
			<if test="target =='title'">
				and (dd.TITLE like '%'||#{keyword}||'%' or ds.DOC_SUB_NAME like '%'||#{keyword}||'%')
			</if>
			)
		where rown between #{start} and #{end}
 	</select>
 	
 	<select id="selectApproval" resultType="com.nbti.dto.ApprovalDTO">
 		select * from approval where temp_seq=#{seq}
 	</select>
 	
 	<select id="selectCount" resultType="int">
 		select count(*) from approval
 		<if test="category == 'writerIsMe'">
 			where member_id = #{id} and doc_state not in 't'
 		</if>
 		<if test="category == 'referIsMe'">
			a 
	        left outer join REFER_LINE rl on a.temp_seq = rl.TEMP_SEQ
 			where referer = #{id} and read='Y' and a.doc_state not in ('c','r')
 		</if>
 		<if test="category == 'approvalIsMe'">
	 		a 
		    left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
		 	where approval_id = #{id} and a.doc_state not in ('c','t')
 		</if>
 		<if test="category == 'return'">
 			where member_id = #{id} and doc_state = 'r'
 		</if>
 		<if test="category == 'cancle'">
 			where member_id = #{id} and doc_state = 'c'
 		</if>
 		<if test="category == 'temp'">
 			where member_id = #{id} and doc_state = 't'
 		</if>
 		<if test="category == 'wait'">
 			a 
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	 		where al.approval_id = #{id} and al.member_state_code='w' and a.doc_state ='i'
 		</if>
 		<if test="category == 'book'">
 			a 
	        left outer join approval_LINE al on a.temp_seq = al.TEMP_SEQ
	 		where al.approval_id = #{id} and al.member_state_code='b' and a.doc_state ='i'
 		</if>
 		<if test="category == 'referwait'">
 			a 
	        left outer join REFER_LINE rl on a.temp_seq = rl.TEMP_SEQ
 			where referer = #{id} and read = 'N' and a.doc_state not in ('c','r')
 		</if>
 	</select>
 	
 	<!-- 문서 정보 최신화 -->
 	<update id="updateDocState">
 		update approval set doc_state = #{state} where temp_seq = ${temp_seq}
 	</update>
 	
 	<!-- 문서번호 생성 및 관리 -->
    <update id="createApprovalSeq" parameterType="map">
	DECLARE
        v_form_code VARCHAR2(3) := #{docHeader};
        v_current_year CHAR(2) := TO_CHAR(SYSDATE, 'YY');
        v_sequence_number NUMBER;
        v_approval_seq VARCHAR2(20);
    BEGIN
        -- 1. 현재 시퀀스 번호 조회
        SELECT COALESCE(MAX(sequence_number), 0) INTO v_sequence_number
        FROM document_number
        WHERE form_code = v_form_code AND year = v_current_year;

        -- 2. 시퀀스 번호 증가
        v_sequence_number := document_seq.NEXTVAL;

        -- 3. MERGE 문으로 시퀀스 번호 업데이트 또는 삽입
        MERGE INTO document_number d
        USING (SELECT v_form_code AS form_code, v_current_year AS year FROM dual) src
        ON (d.form_code = src.form_code AND d.year = src.year)
        WHEN MATCHED THEN
            UPDATE SET sequence_number = v_sequence_number
        WHEN NOT MATCHED THEN
            INSERT (form_code, year, sequence_number)
            VALUES (src.form_code, src.year, v_sequence_number);

        -- 4. 결재 시퀀스 포맷
        v_approval_seq := v_form_code || '-' || v_current_year || '-' || TO_CHAR(v_sequence_number, 'FM000');

        -- 5. 문서의 결재 시퀀스 업데이트
        UPDATE approval
        SET approval_seq = v_approval_seq
        WHERE temp_seq = #{temp_seq};

        DBMS_OUTPUT.PUT_LINE('v_approval_seq: ' || v_approval_seq);
    	END;
    </update>
    
    <update id="updateDocStateCancle">
    	update approval set doc_state = 'c' where temp_seq = ${seq}
    </update>
    
    <delete id="delete">
    	delete from approval where temp_seq = ${seq}
    </delete>

  
 <select id="getVacationHistory" resultType="map">
SELECT
    ap.temp_seq AS seq,
    ap.member_id AS applicant,
    dc.doc_sub_name AS sub_type,
    TO_CHAR(dv.vacation_start, 'YYYY-MM-DD') AS vacation_start,
    TO_CHAR(dv.vacation_end, 'YYYY-MM-DD') AS vacation_end,
    (TRUNC(dv.vacation_end) - TRUNC(dv.vacation_start) + 1) AS days,
    vc.VCATEGORY_NAME AS category_name,
    ads.doc_state_name AS status
FROM
    approval ap
JOIN
    doc_vacation dv ON ap.temp_seq = dv.vacation_seq
JOIN
    doc_sub dc ON ap.doc_sub_seq = dc.doc_form_seq
JOIN
    vacation_category vc ON dv.vacation_category = vc.VCATEGORY_SEQ
JOIN
    approval_doc_state ads ON ap.doc_state = ads.doc_state_code
WHERE
    ap.member_id = #{memberId}
ORDER BY
    ap.temp_seq
</select>
    <select id="selectApprovalerId" resultType="String">
    	select member_id from approval where temp_seq = #{seq} 

    </select>
      <update id="updateRemainingVacation" parameterType="map">
        UPDATE members
        SET vacation_period = #{vacationPeriod}
        WHERE id = #{memberId}
    </update>
    
 </mapper>